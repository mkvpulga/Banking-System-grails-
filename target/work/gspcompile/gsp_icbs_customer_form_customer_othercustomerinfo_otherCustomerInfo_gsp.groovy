import org.codehaus.groovy.grails.plugins.metadata.GrailsPlugin
import org.codehaus.groovy.grails.web.pages.GroovyPage
import org.codehaus.groovy.grails.web.taglib.*
import org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException
import org.springframework.web.util.*
import grails.util.GrailsUtil

class gsp_icbs_customer_form_customer_othercustomerinfo_otherCustomerInfo_gsp extends GroovyPage {
public String getGroovyPageFileName() { "/WEB-INF/grails-app/views/customer/form/customer/othercustomerinfo/_otherCustomerInfo.gsp" }
public Object run() {
Writer out = getOut()
Writer expressionOut = getExpressionOut()
registerSitemeshPreprocessMode()
printHtmlPart(0)
printHtmlPart(1)
expressionOut.print(hasErrors(bean: customerInstance, field: 'displayName', 'has-error'))
printHtmlPart(2)
invokeTag('message','g',12,['code':("customer.displayName.label"),'default':("Display Name")],-1)
printHtmlPart(3)
invokeTag('field','g',16,['type':("text"),'id':("displayName"),'name':("displayName"),'readonly':("readonly"),'value':(customerInstance?.displayName),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',21,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',22,['bean':(customerInstance),'field':("displayName")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',25,['bean':(customerInstance),'field':("displayName")],1)
printHtmlPart(9)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode1', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',30,['code':("customer.customerCode1.label"),'default':("Type of Resident")],-1)
printHtmlPart(11)
invokeTag('select','g',34,['id':("dosriCode"),'name':("customerCode1.id"),'required':("true"),'noSelection':(['':'']),'from':(icbs.lov.ResidentType.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode1?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',39,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',40,['bean':(customerInstance),'field':("customerCode1")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',43,['bean':(customerInstance),'field':("customerCode1")],1)
printHtmlPart(16)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode2', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',48,['code':("customer.customerCode2.label"),'default':("Risk Classification")],-1)
printHtmlPart(17)
invokeTag('select','g',51,['id':("dosriCode"),'name':("customerCode2.id"),'from':(icbs.lov.RiskType.findAllByStatus(true)),'noSelection':(['':'']),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode2?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',56,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',57,['bean':(customerInstance),'field':("customerCode2")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',60,['bean':(customerInstance),'field':("customerCode2")],1)
printHtmlPart(18)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerPepDescription', 'has-error'))
printHtmlPart(19)
invokeTag('message','g',65,['code':("customer.pepDescription.label"),'default':("PEP Description")],-1)
printHtmlPart(20)
invokeTag('select','g',71,['id':("customerPepDescription"),'name':("customerPepDescription.id"),'from':(icbs.lov.PepDescriptionType.findAllByStatus(true)),'noSelection':(['':'']),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerPepDescription?.id),'class':("form-control")],-1)
printHtmlPart(21)
expressionOut.print(hasErrors(bean: customerInstance, field: 'amla', 'has-error'))
printHtmlPart(22)
invokeTag('message','g',75,['code':("customer.amla.label"),'default':("Verified AMLA Blocked")],-1)
printHtmlPart(23)
invokeTag('textField','g',77,['name':("amla"),'maxlength':("50"),'value':(customerInstance?.amla),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',86,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',87,['bean':(customerInstance),'field':("amla")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',89,['bean':(customerInstance),'field':("amla")],1)
printHtmlPart(24)
expressionOut.print(hasErrors(bean: customerInstance, field: 'customerCode3', 'has-error'))
printHtmlPart(25)
invokeTag('message','g',94,['code':("customer.customerCode3.label"),'default':(" Size of Firm")],-1)
printHtmlPart(17)
invokeTag('select','g',101,['id':("dosriCode"),'name':("customerCode3.id"),'from':(icbs.lov.FirmSize.findAllByStatus(true)),'noSelection':(['':'']),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.customerCode3?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(1, {->
printHtmlPart(12)
createTagBody(2, {->
printHtmlPart(13)
invokeTag('message','g',108,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',109,['bean':(customerInstance),'field':("customerCode3")],2)
printHtmlPart(15)
})
invokeTag('hasErrors','g',109,['bean':(customerInstance),'field':("customerCode3")],1)
printHtmlPart(16)
expressionOut.print(hasErrors(bean: customerInstance, field: 'typeOfSourceIncome', 'has-error'))
printHtmlPart(26)
invokeTag('message','g',112,['code':("customer.typeOfSourceIncome.label"),'default':("Type of Source Income")],-1)
printHtmlPart(27)
invokeTag('select','g',121,['id':("typeOfSourceIncome"),'name':("typeOfSourceIncome.id"),'from':(icbs.lov.Lov.findAllByGroupCodeAndStatus("CUST-SOI",true)),'noSelection':(['':'']),'optionKey':("id"),'optionValue':("itemValue"),'value':(customerInstance?.typeOfSourceIncome?.id),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',127,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',128,['bean':(customerInstance),'field':("typeOfSourceIncome")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',128,['bean':(customerInstance),'field':("typeOfSourceIncome")],1)
printHtmlPart(29)
expressionOut.print(hasErrors(bean: customerInstance, field: 'sourceOfIncome', 'has-error'))
printHtmlPart(30)
invokeTag('message','g',130,['code':("customer.sourceOfIncome.label"),'default':("Source of Income")],-1)
printHtmlPart(27)
invokeTag('textField','g',135,['id':("sourceOfIncome"),'name':("sourceOfIncome"),'maxlength':("50"),'':(""),'value':(customerInstance?.sourceOfIncome),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(1, {->
printHtmlPart(5)
createTagBody(2, {->
printHtmlPart(6)
invokeTag('message','g',142,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',142,['bean':(customerInstance),'field':("sourceOfIncome")],2)
printHtmlPart(8)
})
invokeTag('hasErrors','g',145,['bean':(customerInstance),'field':("sourceOfIncome")],1)
printHtmlPart(31)
if(true && (customerInstance?.type?.id==2)) {
printHtmlPart(32)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.placeOfBusinessRegistration', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',153,['code':("customer.placeOfBusinessRegistration.label"),'default':("Place of Business Registration")],-1)
printHtmlPart(34)
invokeTag('textField','g',163,['id':("placeOfBusinessRegistration"),'name':("placeOfBusinessRegistration"),'maxlength':("50"),'value':(customerInstance?.placeOfBusinessRegistration),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',168,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',168,['bean':(customerInstance),'field':("placeOfBusinessRegistration")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',170,['bean':(customerInstance),'field':("placeOfBusinessRegistration")],2)
printHtmlPart(35)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.registeringAgency', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',174,['code':("customer.registeringAgency.label"),'default':("Registering Agency")],-1)
printHtmlPart(36)
invokeTag('textField','g',178,['id':("registeringAgency"),'name':("registeringAgency"),'maxlength':("50"),'value':(customerInstance?.registeringAgency),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',187,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',187,['bean':(customerInstance),'field':("registeringAgency")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',191,['bean':(customerInstance),'field':("registeringAgency")],2)
printHtmlPart(37)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.registrationNo', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',196,['code':("customer.registrationNo.label"),'default':("Registration No")],-1)
printHtmlPart(36)
invokeTag('textField','g',199,['id':("registrationNo"),'name':("registrationNo"),'maxlength':("50"),'value':(customerInstance?.registrationNo),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',206,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',207,['bean':(customerInstance),'field':("registrationNo")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',210,['bean':(customerInstance),'field':("registrationNo")],2)
printHtmlPart(38)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.registrationDate', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',216,['code':("customer.registrationDate.label"),'default':("Registration Date")],-1)
printHtmlPart(39)
expressionOut.print(customerInstance?.registrationDate)
printHtmlPart(40)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',228,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',229,['bean':(customerInstance),'field':("registrationDate")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',233,['bean':(customerInstance),'field':("registrationDate")],2)
printHtmlPart(41)
expressionOut.print(hasErrors(bean: customerInstance, field: 'registrationDate', 'has-error'))
printHtmlPart(42)
invokeTag('message','g',237,['code':("customer.registrationDate.label"),'default':("Registration Date")],-1)
printHtmlPart(43)
invokeTag('customDatePicker','g',240,['name':("registrationDate"),'precision':("day"),'class':("form-control"),'value':(customerInstance?.registrationDate),'default':("none"),'noSelection':(['': ''])],-1)
printHtmlPart(44)
createTagBody(2, {->
printHtmlPart(45)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',248,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',248,['bean':(customerInstance),'field':("registrationDate")],3)
printHtmlPart(46)
})
invokeTag('hasErrors','g',252,['bean':(customerInstance),'field':("registrationDate")],2)
printHtmlPart(47)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.tin', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',257,['code':("customer.tin.label"),'default':("Tax Identification No (TIN)")],-1)
printHtmlPart(36)
invokeTag('textField','g',259,['id':("tin"),'name':("tin"),'maxlength':("50"),'value':(customerInstance?.tin),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',266,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',267,['bean':(customerInstance),'field':("tin")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',268,['bean':(customerInstance),'field':("tin")],2)
printHtmlPart(48)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.typeOfBusiness', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',276,['code':("customer.typeOfBusiness.label"),'default':("Type of Business")],-1)
printHtmlPart(36)
invokeTag('textField','g',280,['id':("typeOfBusiness"),'name':("typeOfBusiness"),'maxlength':("50"),'value':(customerInstance?.typeOfBusiness),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',289,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',290,['bean':(customerInstance),'field':("typeOfBusiness")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',293,['bean':(customerInstance),'field':("typeOfBusiness")],2)
printHtmlPart(49)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.authorizedRepresentative', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',299,['code':("customer.authorizedRepresentative.label"),'default':("Authorized Representative")],-1)
printHtmlPart(50)
invokeTag('textArea','g',306,['rows':("5"),'cols':("20"),'id':("authorizedRepresentative"),'name':("authorizedRepresentative"),'value':(customerInstance?.authorizedRepresentative),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',311,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',313,['bean':(customerInstance),'field':("authorizedRepresentative")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',317,['bean':(customerInstance),'field':("authorizedRepresentative")],2)
printHtmlPart(51)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nonpersonaladditional.listOfDirectorsPartnersStackholder', 'has-error'))
printHtmlPart(33)
invokeTag('message','g',322,['code':("customer.listOfDirectorsPartnersStackholder.label"),'default':("List of Directors Partners Stockholders")],-1)
printHtmlPart(36)
invokeTag('textArea','g',331,['rows':("5"),'cols':("20"),'id':("listOfDirectorsPartnersStackholder"),'name':("listOfDirectorsPartnersStackholder"),'maxlength':("50"),'value':(customerInstance?.listOfDirectorsPartnersStackholder),'class':("form-control")],-1)
printHtmlPart(28)
createTagBody(2, {->
printHtmlPart(5)
createTagBody(3, {->
printHtmlPart(6)
invokeTag('message','g',336,['error':(it)],-1)
printHtmlPart(7)
})
invokeTag('eachError','g',338,['bean':(customerInstance),'field':("listOfDirectorsPartnersStackholder")],3)
printHtmlPart(8)
})
invokeTag('hasErrors','g',338,['bean':(customerInstance),'field':("listOfDirectorsPartnersStackholder")],2)
printHtmlPart(52)
}
printHtmlPart(53)
if(true && (customerInstance?.type?.id==1)) {
printHtmlPart(54)
expressionOut.print(hasErrors(bean: customerInstance, field: 'dosriCode', 'has-error'))
printHtmlPart(10)
invokeTag('message','g',342,['code':("customer.dosriCode.label"),'default':("DOSRI Code")],-1)
printHtmlPart(11)
invokeTag('select','g',353,['id':("dosriCode"),'name':("dosriCode.id"),'required':("true"),'noSelection':(['':'']),'from':(icbs.lov.CustomerDosriCode.findAllByStatus(true)),'optionKey':("id"),'optionValue':("description"),'value':(customerInstance?.dosriCode?.id),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',358,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',359,['bean':(customerInstance),'field':("dosriCode")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',359,['bean':(customerInstance),'field':("dosriCode")],2)
printHtmlPart(55)
expressionOut.print(hasErrors(bean: customerInstance, field: 'nationality', 'has-error'))
printHtmlPart(56)
invokeTag('message','g',363,['code':("customer.natonality.label"),'default':("Nationality")],-1)
printHtmlPart(57)
invokeTag('select','g',372,['id':("nationality"),'name':("nationality.id"),'from':(icbs.lov.Lov.findAllByGroupCodeAndStatus("NATL",true)),'noSelection':(['':'']),'optionKey':("id"),'optionValue':("itemValue"),'value':(customerInstance?.nationality?.id),'class':("form-control")],-1)
printHtmlPart(58)
createTagBody(2, {->
printHtmlPart(59)
createTagBody(3, {->
printHtmlPart(60)
invokeTag('message','g',376,['error':(it)],-1)
printHtmlPart(61)
})
invokeTag('eachError','g',376,['bean':(customerInstance),'field':("nationality")],3)
printHtmlPart(62)
})
invokeTag('hasErrors','g',379,['bean':(customerInstance),'field':("nationality")],2)
printHtmlPart(63)
expressionOut.print(hasErrors(bean: customerInstance, field: 'sssNo', 'has-error'))
printHtmlPart(64)
invokeTag('message','g',381,['code':("customer.sssNo.label"),'default':("SSS")],-1)
printHtmlPart(65)
invokeTag('textField','g',384,['name':("sssNo"),'maxlength':("50"),'value':(customerInstance?.sssNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',393,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',393,['bean':(customerInstance),'field':("sssNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',396,['bean':(customerInstance),'field':("sssNo")],2)
printHtmlPart(66)
expressionOut.print(hasErrors(bean: customerInstance, field: 'gisNo', 'has-error'))
printHtmlPart(67)
invokeTag('message','g',401,['code':("customer.gisNo.label"),'default':("GSIS")],-1)
printHtmlPart(23)
invokeTag('textField','g',403,['name':("gisNo"),'maxlength':("50"),'value':(customerInstance?.gisNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',413,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',413,['bean':(customerInstance),'field':("gisNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',416,['bean':(customerInstance),'field':("gisNo")],2)
printHtmlPart(68)
expressionOut.print(hasErrors(bean: customerInstance, field: 'tinNo', 'has-error'))
printHtmlPart(69)
invokeTag('message','g',421,['code':("customer.tinNo.label"),'default':("TIN")],-1)
printHtmlPart(70)
invokeTag('textField','g',423,['name':("tinNo"),'maxlength':("50"),'value':(customerInstance?.tinNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',432,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',432,['bean':(customerInstance),'field':("tinNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',434,['bean':(customerInstance),'field':("tinNo")],2)
printHtmlPart(71)
expressionOut.print(hasErrors(bean: customerInstance, field: 'passportNo', 'has-error'))
printHtmlPart(72)
invokeTag('message','g',439,['code':("customer.passportNo.label"),'default':("Passport No")],-1)
printHtmlPart(17)
invokeTag('textField','g',442,['name':("passportNo"),'maxlength':("50"),'value':(customerInstance?.passportNo),'class':("form-control")],-1)
printHtmlPart(4)
createTagBody(2, {->
printHtmlPart(12)
createTagBody(3, {->
printHtmlPart(13)
invokeTag('message','g',452,['error':(it)],-1)
printHtmlPart(14)
})
invokeTag('eachError','g',453,['bean':(customerInstance),'field':("passportNo")],3)
printHtmlPart(15)
})
invokeTag('hasErrors','g',455,['bean':(customerInstance),'field':("passportNo")],2)
printHtmlPart(73)
}
printHtmlPart(74)
}
public static final Map JSP_TAGS = new HashMap()
protected void init() {
	this.jspTags = JSP_TAGS
}
public static final String CONTENT_TYPE = 'text/html;charset=UTF-8'
public static final long LAST_MODIFIED = 1571028973526L
public static final String EXPRESSION_CODEC = 'html'
public static final String STATIC_CODEC = 'none'
public static final String OUT_CODEC = 'html'
public static final String TAGLIB_CODEC = 'none'
}
